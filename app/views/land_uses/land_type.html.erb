<h1>How much <%= @land_type.downcase %> is there?</h1>

<h3><%= @land_type %> area by region and year</h3>
<div class="row">
  <div class="span8 columns">
    <p>2008 <%= @land_type %> by region. The darker a region is, the higher the proportion of <%= @short_type %> in that region.
    </p>
    <div id="map" style="height: 600px;"></div>
  </div>
  <div class="span8 columns">
    <p>This table shows the proportion of <%= @short_type %> area compared to the  total region area for the given year.
    </p>
    <table class="zebra-striped">
      <thead>
      <tr>
        <th>Region</th>
        <th class="numeric">1990 (%)</th>
        <th class="numeric">2008 (%)</th>
      </tr>
      </thead>
      <tbody>
      <% @region_lands.each do |region, lands| %>
        <tr>
          <% expected = Land::YEARS.dup %>
          <td class="name_and_sparkline">
            <div class="region_short_name" title="<%= region.name %>"><%= show_region_link region %></div>
            <div id="<%= dom_id(region, 'graph_per') %>" class="aGraph"></div>
          </td>
          <% lands.each do |land| %>
            <% while (expects = expected.shift) && (expects != land.year) %>
              <td class="numeric">-</td>
            <% end %>
            <td class="numeric <%= 'estimate' if land.respond_to?(:estimate) && land.estimate %>">
              <%= number_with_precision(land.per_region_area.try(:*, 100), :precision => 2) || '-' %></td>
          <% end %>
          <% expected.each do %>
            <%= content_tag(:td, '-', :class => 'numeric') %>
          <% end %>
          <% if lands.size == Land::YEARS.size %>
            <script>
              drawSparkLine("<%= dom_id(region, 'graph_per') %>", <%= lands.map(&:per_region_area).map(&:to_f).to_json %>);
            </script>
          <% end %>
        </tr>
      <% end %>
      </tbody>
    </table>

  </div>
</div>

<h3><%= @land_type %> area</h3>
<p>
  This table shows the area of <%= @land_type %> within that region for the given year.
</p>
<table class="zebra-striped">
  <thead>
  <tr>
    <th>Region</th>
    <th class="numeric">1990 (sq kms)</th>
    <th class="numeric">2008 (sq kms)</th>
  </tr>
  </thead>
  <tbody>
  <% @region_lands.each do |region, lands| %>
    <tr>
      <% expected = Land::YEARS.dup %>
      <td class="name_and_sparkline">
        <div class="region_short_name" title="<%= region.name %>"><%= show_region_link region %></div>
        <div id="<%= dom_id(region, 'graph') %>" class="aGraph"></div>
      </td>
      <% lands.each do |land| %>
        <% while (expects = expected.shift) && (expects != land.year) %>
          <td class="numeric">-</td>
        <% end %>
        <td class="numeric <%= 'estimate' if land.respond_to?(:estimate) && land.estimate %>"> <%= number_with_precision(land.square_kms, :delimiter => ',', :precision => 2) || '-' %> 
      <% end %>
      <% expected.each do %>
        <%= content_tag(:td, '-', :class => 'numeric') %>
      <% end %>
      <% if lands.size == Land::YEARS.size %>
        <script>
          drawSparkLine("<%= dom_id(region, 'graph') %>", <%= lands.map(&:square_kms).map(&:to_f).to_json %>);
        </script>
      <% end %>
    </tr>
  <% end %>
  </tbody>
</table>



<%= javascript_tag do %>
  var tonnage = <%= raw Land.where('land_type = ?', @land_type.downcase).year_json('2008') %>;

  var tonnes = {}
  for (var t in tonnage) {
    tonnes[regc[t]] = tonnage[t];
  }
  var preferredColor = "YlGn";
<% end %>
<%= javascript_include_tag 'statehood.js' %>
